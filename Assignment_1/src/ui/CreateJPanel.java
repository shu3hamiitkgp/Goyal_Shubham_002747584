/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.InputVerifier;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import model.EmployeeProfile;
import model.EmployeeProfileHistory;

/**
 *
 * @author shubhamgoyal
 */
public class CreateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateJPanel
     */
    
    EmployeeProfileHistory history;
    
    public CreateJPanel(EmployeeProfileHistory history) {
        initComponents();
        this.history=history;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rbtnGroup = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblEmployeeID = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblName3 = new javax.swing.JLabel();
        lblStartDate = new javax.swing.JLabel();
        lblLevel = new javax.swing.JLabel();
        lblTeamInfo = new javax.swing.JLabel();
        lblName7 = new javax.swing.JLabel();
        lblCellPhoneNumber = new javax.swing.JLabel();
        lblEmailAddress = new javax.swing.JLabel();
        lblPhotoPath = new javax.swing.JLabel();
        txtEmailAddress = new javax.swing.JTextField();
        txtCellPhoneNumber = new javax.swing.JTextField();
        txtEmployeeID = new javax.swing.JTextField();
        txtPositionTitle = new javax.swing.JTextField();
        txtTeamInfo = new javax.swing.JTextField();
        txtStartDate = new javax.swing.JTextField();
        txtLevel = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnUpload = new javax.swing.JButton();
        rbtnMale = new javax.swing.JRadioButton();
        rbtnFemale = new javax.swing.JRadioButton();
        rbtnOther = new javax.swing.JRadioButton();
        txtPhotoPath = new javax.swing.JTextField();
        lblPhoto = new javax.swing.JLabel();

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Create Employee Details");

        lblName.setText("Name:");

        lblEmployeeID.setText("Employee ID:");

        lblAge.setText("Age:");

        lblName3.setText("Gender:");

        lblStartDate.setText("Start Date:");

        lblLevel.setText("Level:");

        lblTeamInfo.setText("Team Info:");

        lblName7.setText("Position Title:");

        lblCellPhoneNumber.setText("Cell Phone:");

        lblEmailAddress.setText("Email:");

        lblPhotoPath.setText("Photo:");

        txtEmailAddress.setToolTipText("Standard xyz@mail.com format");

        txtCellPhoneNumber.setToolTipText("Enter 10-digit numbers only");

        txtEmployeeID.setToolTipText("Only numbers accepted (unique entry)");

        txtPositionTitle.setToolTipText("Only Alphabets and Spaces");

        txtTeamInfo.setToolTipText("Only Alphabets and Spaces");

        txtStartDate.setToolTipText("dd/MM/yyyy Format Only");

        txtLevel.setToolTipText("Only numbers accepted");

        txtAge.setToolTipText("Only numbers accepted");

        txtName.setToolTipText("Only Alphabets and Spaces");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpload.setText("Upload");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        rbtnGroup.add(rbtnMale);
        rbtnMale.setText("M");

        rbtnGroup.add(rbtnFemale);
        rbtnFemale.setText("F");

        rbtnGroup.add(rbtnOther);
        rbtnOther.setText("Other");

        txtPhotoPath.setToolTipText("Upload picture");

        lblPhoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPhoto.setText("Image");
        lblPhoto.setMaximumSize(new java.awt.Dimension(33, 17));
        lblPhoto.setMinimumSize(new java.awt.Dimension(33, 17));
        lblPhoto.setPreferredSize(new java.awt.Dimension(33, 17));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblName)
                            .addComponent(lblName3)
                            .addComponent(lblCellPhoneNumber)
                            .addComponent(lblEmailAddress)
                            .addComponent(lblAge)
                            .addComponent(lblPhotoPath))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCellPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rbtnMale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtnFemale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtnOther))
                            .addComponent(txtPhotoPath, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUpload)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblEmployeeID)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblStartDate)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblTeamInfo)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtTeamInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblName7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtPositionTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblLevel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(btnSave, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addGap(0, 51, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(lblTitle)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblName)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblEmployeeID)
                        .addComponent(txtEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName3)
                    .addComponent(lblName7)
                    .addComponent(txtPositionTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbtnMale)
                    .addComponent(rbtnFemale)
                    .addComponent(rbtnOther))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTeamInfo)
                    .addComponent(lblAge)
                    .addComponent(txtTeamInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStartDate)
                    .addComponent(lblCellPhoneNumber)
                    .addComponent(txtCellPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmailAddress)
                    .addComponent(lblLevel)
                    .addComponent(txtEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhotoPath)
                    .addComponent(btnUpload)
                    .addComponent(txtPhotoPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btnSave))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(153, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void setValuesToHistory(){
        
        
        EmployeeProfile ep= history.addNewProfile();
                
        ep.setName(txtName.getText());
        ep.setAge(Integer.parseInt(txtAge.getText()));
        ep.setEmployeeID(Long.valueOf(txtEmployeeID.getText()));
//        ep.setGender(txtGender.getText());
        ep.setStartDate(getDateFromString(txtStartDate.getText()));
        ep.setLevel(Integer.parseInt(txtLevel.getText()));
        ep.setTeamInfo(txtTeamInfo.getText());
        ep.setPositionTitle(txtPositionTitle.getText());
        ep.setCellPhoneNumber(Long.valueOf(txtCellPhoneNumber.getText()));
        ep.setEmailAddress(txtEmailAddress.getText());
        ep.setPhotoPath(txtPhotoPath.getText());
        
        if(rbtnMale.isSelected()){
            ep.setGender(rbtnMale.getText());
        }else if(rbtnFemale.isSelected()){
            ep.setGender(rbtnFemale.getText());
        }else if(rbtnOther.isSelected()){
            ep.setGender(rbtnOther.getText());
        }
            
        
    }
      
    public Date getDateFromString(String StartDate) {
        
        Date date = null;
        try {
           date = new SimpleDateFormat("dd/MM/yyyy").parse(StartDate);
        }catch (Exception e) {
            System.out.println(e.getMessage());
            System.out.println("Not able to Parse date String");
        }
        return date;
    }
    
    public boolean isDataValid(){
        
        System.out.println("Name Validation : " + isNameValid());
        System.out.println("Age Validation : " + isAgeValid());
        System.out.println("EmployeeID Validation : " + isEmployeeIDValid());
//        System.out.println("Gender Validation : " + isGenderValid());
        System.out.println("StartDate Validation : " + isStartDateValid());
        System.out.println("Level Validation : " + isLevelValid());
        System.out.println("TeamInfo Validation : " + isTeamInfoValid());
        System.out.println("PositionTitle Validation : " + isPositionTitleValid());
        System.out.println("CellPhoneNumber Validation : " + isCellPhoneNumberValid());
        System.out.println("Email Validation : " + isEmailValid());
        System.out.println("PhotoPath Validation : " + isPhotoPathValid());
        
        if(isNameValid() && isAgeValid() && isEmployeeIDValid() && 
                isStartDateValid() && isLevelValid() && isTeamInfoValid() && isPositionTitleValid() &&
                isCellPhoneNumberValid() && isEmailValid() && isPhotoPathValid()) {
            
            return true;
        }
        return false;
        
    }
    
    public boolean isNameValid() {
        
        if(txtName.getText().isBlank()) {
            return false;
        }
        return txtName.getText().matches("^[a-zA-Z\\s]*$");
    }

    public boolean isAgeValid() {
        
        String Age = txtAge.getText();
        Age = Age.replace(" ", "");
        
        try {
            Integer.valueOf(Age);
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public boolean isEmployeeIDValid() {
        
        String EmployeeID = txtEmployeeID.getText();
        EmployeeID = EmployeeID.replace(" ", "");
        
        try {
            Long.valueOf(EmployeeID) ;
            if(history.searchEmployeeIDProfile(EmployeeID) != null){
                throw new Exception("Already Exists");
            };
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public boolean isLevelValid() {
        
        String Level = txtLevel.getText();
        Level = Level.replace(" ", "");
        
        try {
            Integer.valueOf(Level);
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public boolean isStartDateValid() {
        
        if(txtStartDate.getText().isBlank()){
            return false;
        }
        
        Date date = null;
        try {
           SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyy");
           format.setLenient(false);
           date = format.parse(txtStartDate.getText().replace(" ", ""));
           //date = new SimpleDateFormat("dd/MM/yyyy").parse(txtStartDate.getText().replace(" ", ""));
                   
           System.err.println(date);
           if(date.after(new Date())){
               return false;
           }
           
        }catch (Exception e) {
            System.out.println(e.getMessage());
            return false;
        }
        return true;
    }

    public boolean isTeamInfoValid() {
        
        if(txtTeamInfo.getText().isBlank()) {
            return false;
        }
        return txtTeamInfo.getText().matches("^[a-zA-Z\\s]*$");

                
    }

    public boolean isPositionTitleValid() {
        
        
        if(txtPositionTitle.getText().isBlank()) {
            return false;
        }
        return txtPositionTitle.getText().matches("^[a-zA-Z\\s]*$");
    }

    public boolean isCellPhoneNumberValid() {
        
        String CellPhoneNumber = txtCellPhoneNumber.getText();
        CellPhoneNumber = CellPhoneNumber.replace(" ", "");
        if(CellPhoneNumber.length()!=10){
            return false;
        }
        try {
            Long.valueOf(CellPhoneNumber);
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public boolean isEmailValid() {
        
        if(txtEmailAddress.getText().isBlank()){
            return false;
        }
        String emailRegex = "^[\\w-_\\.+]*[\\w-_\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$";
        return txtEmailAddress.getText().matches(emailRegex);
    }
    
    public boolean isPhotoPathValid() {
        
        File file = new File(txtPhotoPath.getText());
        if(file.exists()){
            return true;
        }
        return false;
    }
    
    private void setPhoto(){
        
        ImageIcon photo = new ImageIcon(txtPhotoPath.getText());
        Image photoResized = photo.getImage().getScaledInstance(lblPhoto.getWidth(), lblPhoto.getHeight(),4);
        lblPhoto.setIcon(new ImageIcon(photoResized));
    }
    
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        
        if(isDataValid()){
            setValuesToHistory();
            JOptionPane.showMessageDialog(this, "Employee Profile Saved Successfully");
        }else{
            JOptionPane.showMessageDialog(this, "Error Saving Employee Profile");
        }  
        
        txtName.setText("");
        txtEmployeeID.setText("");
        txtAge.setText("");
//        txtGender.setText("");
        txtStartDate.setText("");
        txtLevel.setText("");
        txtTeamInfo.setText("");
        txtPositionTitle.setText("");
        txtCellPhoneNumber.setText("");
        txtEmailAddress.setText("");
        txtPhotoPath.setText("");
        lblPhoto.setIcon(null);
        rbtnGroup.clearSelection();
        
    }//GEN-LAST:event_btnSaveActionPerformed

    
    
    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        // TODO add your handling code here:
        
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("/"));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            txtPhotoPath.setText(selectedFile.getAbsolutePath());
            setPhoto();
        }
    }//GEN-LAST:event_btnUploadActionPerformed
    
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpload;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCellPhoneNumber;
    private javax.swing.JLabel lblEmailAddress;
    private javax.swing.JLabel lblEmployeeID;
    private javax.swing.JLabel lblLevel;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName3;
    private javax.swing.JLabel lblName7;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JLabel lblPhotoPath;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblTeamInfo;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JRadioButton rbtnFemale;
    private javax.swing.ButtonGroup rbtnGroup;
    private javax.swing.JRadioButton rbtnMale;
    private javax.swing.JRadioButton rbtnOther;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCellPhoneNumber;
    private javax.swing.JTextField txtEmailAddress;
    private javax.swing.JTextField txtEmployeeID;
    private javax.swing.JTextField txtLevel;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhotoPath;
    private javax.swing.JTextField txtPositionTitle;
    private javax.swing.JTextField txtStartDate;
    private javax.swing.JTextField txtTeamInfo;
    // End of variables declaration//GEN-END:variables

 
    
}
